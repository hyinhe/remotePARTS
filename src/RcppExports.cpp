// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "remotePARTS_types.h"
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// crosspart_worker_cpp
List crosspart_worker_cpp(const MapMatd& xxi, const MapMatd& xxj, const MapMatd& xxi0, const MapMatd& xxj0, const MapMatd& invCholV_i, const MapMatd& invCholV_j, const MapMatd& Vsub, double nug_i, double nug_j, int df1, int df2, bool Vcoef, int ncores);
RcppExport SEXP _remotePARTS_crosspart_worker_cpp(SEXP xxiSEXP, SEXP xxjSEXP, SEXP xxi0SEXP, SEXP xxj0SEXP, SEXP invCholV_iSEXP, SEXP invCholV_jSEXP, SEXP VsubSEXP, SEXP nug_iSEXP, SEXP nug_jSEXP, SEXP df1SEXP, SEXP df2SEXP, SEXP VcoefSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const MapMatd& >::type xxi(xxiSEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type xxj(xxjSEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type xxi0(xxi0SEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type xxj0(xxj0SEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type invCholV_i(invCholV_iSEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type invCholV_j(invCholV_jSEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type Vsub(VsubSEXP);
    Rcpp::traits::input_parameter< double >::type nug_i(nug_iSEXP);
    Rcpp::traits::input_parameter< double >::type nug_j(nug_jSEXP);
    Rcpp::traits::input_parameter< int >::type df1(df1SEXP);
    Rcpp::traits::input_parameter< int >::type df2(df2SEXP);
    Rcpp::traits::input_parameter< bool >::type Vcoef(VcoefSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    rcpp_result_gen = Rcpp::wrap(crosspart_worker_cpp(xxi, xxj, xxi0, xxj0, invCholV_i, invCholV_j, Vsub, nug_i, nug_j, df1, df2, Vcoef, ncores));
    return rcpp_result_gen;
END_RCPP
}
// fitGLS_cpp
List fitGLS_cpp(const MapMatd& X, const MapMatd& V, const MapMatd& y, const MapMatd& X0, double nugget, bool save_xx, bool save_invchol, bool LL_only, bool no_F, bool optimize_nugget, double nug_l, double nug_u, double nug_tol, const MapMatd& invCholV, bool use_invCholV, int ncores);
RcppExport SEXP _remotePARTS_fitGLS_cpp(SEXP XSEXP, SEXP VSEXP, SEXP ySEXP, SEXP X0SEXP, SEXP nuggetSEXP, SEXP save_xxSEXP, SEXP save_invcholSEXP, SEXP LL_onlySEXP, SEXP no_FSEXP, SEXP optimize_nuggetSEXP, SEXP nug_lSEXP, SEXP nug_uSEXP, SEXP nug_tolSEXP, SEXP invCholVSEXP, SEXP use_invCholVSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const MapMatd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type V(VSEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< double >::type nugget(nuggetSEXP);
    Rcpp::traits::input_parameter< bool >::type save_xx(save_xxSEXP);
    Rcpp::traits::input_parameter< bool >::type save_invchol(save_invcholSEXP);
    Rcpp::traits::input_parameter< bool >::type LL_only(LL_onlySEXP);
    Rcpp::traits::input_parameter< bool >::type no_F(no_FSEXP);
    Rcpp::traits::input_parameter< bool >::type optimize_nugget(optimize_nuggetSEXP);
    Rcpp::traits::input_parameter< double >::type nug_l(nug_lSEXP);
    Rcpp::traits::input_parameter< double >::type nug_u(nug_uSEXP);
    Rcpp::traits::input_parameter< double >::type nug_tol(nug_tolSEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type invCholV(invCholVSEXP);
    Rcpp::traits::input_parameter< bool >::type use_invCholV(use_invCholVSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    rcpp_result_gen = Rcpp::wrap(fitGLS_cpp(X, V, y, X0, nugget, save_xx, save_invchol, LL_only, no_F, optimize_nugget, nug_l, nug_u, nug_tol, invCholV, use_invCholV, ncores));
    return rcpp_result_gen;
END_RCPP
}
// invchol_cpp
MatrixXd invchol_cpp(const MapMatd& V, double nugget, int ncores);
RcppExport SEXP _remotePARTS_invchol_cpp(SEXP VSEXP, SEXP nuggetSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const MapMatd& >::type V(VSEXP);
    Rcpp::traits::input_parameter< double >::type nugget(nuggetSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    rcpp_result_gen = Rcpp::wrap(invchol_cpp(V, nugget, ncores));
    return rcpp_result_gen;
END_RCPP
}
// optimize_nugget_cpp
double optimize_nugget_cpp(const MapMatd& X, const MapMatd& X0, const MapMatd& V, const MapMatd& y, double lower, double upper, double tol, const MapMatd& invchol, bool use_invchol, bool debug, int ncores);
RcppExport SEXP _remotePARTS_optimize_nugget_cpp(SEXP XSEXP, SEXP X0SEXP, SEXP VSEXP, SEXP ySEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP tolSEXP, SEXP invcholSEXP, SEXP use_invcholSEXP, SEXP debugSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const MapMatd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type V(VSEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const MapMatd& >::type invchol(invcholSEXP);
    Rcpp::traits::input_parameter< bool >::type use_invchol(use_invcholSEXP);
    Rcpp::traits::input_parameter< bool >::type debug(debugSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    rcpp_result_gen = Rcpp::wrap(optimize_nugget_cpp(X, X0, V, y, lower, upper, tol, invchol, use_invchol, debug, ncores));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_remotePARTS_crosspart_worker_cpp", (DL_FUNC) &_remotePARTS_crosspart_worker_cpp, 13},
    {"_remotePARTS_fitGLS_cpp", (DL_FUNC) &_remotePARTS_fitGLS_cpp, 16},
    {"_remotePARTS_invchol_cpp", (DL_FUNC) &_remotePARTS_invchol_cpp, 3},
    {"_remotePARTS_optimize_nugget_cpp", (DL_FUNC) &_remotePARTS_optimize_nugget_cpp, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_remotePARTS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
